// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String   @default("Anonymous")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clerkId   String   @unique
  stories   Story[]
}

model Story {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  content   String   @db.Text
  prompt    String   @db.Text
  subject   String   @db.Text
  speech    Speech?
  image     Image?

  @@unique([id, userId])
  @@index([userId])
}

model Speech {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storyId   String   @unique
  story     Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)
  buffer    Bytes

  @@index([storyId])
}

model Image {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storyId   String   @unique
  story     Story    @relation(fields: [storyId], references: [id], onDelete: Cascade)
  buffer    Bytes

  @@index([storyId])
}
